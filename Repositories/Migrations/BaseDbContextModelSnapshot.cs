// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Contexts;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionID"));

                    b.Property<int>("CorrectAnswer")
                        .HasColumnType("int");

                    b.Property<string>("OptionA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.HasKey("QuestionID");

                    b.HasIndex("QuizID");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionID = 1,
                            CorrectAnswer = 3,
                            OptionA = "Patates Kızartması",
                            OptionB = "Burger",
                            OptionC = "Döner",
                            OptionD = "Kuru Fasulye",
                            OptionE = "Makarna",
                            QuestionText = "En sevdiği yemek?",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 2,
                            CorrectAnswer = 1,
                            OptionA = "Pop",
                            OptionB = "Rap",
                            OptionC = "Rock",
                            OptionD = "Türk Halk Müziği",
                            OptionE = "Arabesk",
                            QuestionText = "En sevdiği müzik türü?",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 3,
                            CorrectAnswer = 4,
                            OptionA = "Uyuyarak",
                            OptionB = "Bilgisayar başında",
                            OptionC = "Yürüyüş yaparak",
                            OptionD = "Kitap okuyarak",
                            OptionE = "Arkadaşlarıyla buluşarak",
                            QuestionText = "Zamanını nasıl geçirir?",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 4,
                            CorrectAnswer = 2,
                            OptionA = "Kayıp para bulmak",
                            OptionB = "Tuttuğu takımın galibiyeti",
                            OptionC = "Süpriz hediye almak",
                            OptionD = "Alışveriş mağazasındaki indirimler",
                            OptionE = "Çekilişle telefon kazanmak",
                            QuestionText = "Onu en çok ne sevindirir?",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 5,
                            CorrectAnswer = 5,
                            OptionA = "Kırmızı",
                            OptionB = "Beyaz",
                            OptionC = "Siyah",
                            OptionD = "Sarı",
                            OptionE = "Mavi",
                            QuestionText = "Favori rengi ne?",
                            QuizID = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.Quiz", b =>
                {
                    b.Property<int>("QuizID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuizID");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            QuizID = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 9, 22, 14, 34, 0, 694, DateTimeKind.Local).AddTicks(819),
                            Name = "Havuz Soruları"
                        });
                });

            modelBuilder.Entity("Entities.Models.Question", b =>
                {
                    b.HasOne("Entities.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Entities.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
